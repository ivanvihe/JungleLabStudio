    1: from PyQt6.QtWidgets import (
           QWidget,
           QVBoxLayout,
           QSplitter,
           QFrame,
           QGroupBox,
           QLabel,
           QTableWidget,
           QHeaderView,
           QProgressBar,
           QHBoxLayout,
       )
    1: from PyQt6.QtCore import Qt
       
       
    1: def create_live_control_tab(self):
           """Tab de control en vivo (UI original optimizada)"""
    1:     widget = QWidget()
    1:     layout = QVBoxLayout(widget)
       
    1:     content_splitter = QSplitter(Qt.Orientation.Horizontal)
    1:     deck_a_widget = create_deck_section(self, 'A')
    1:     content_splitter.addWidget(deck_a_widget)
       
    1:     mix_widget = create_mix_section(self)
    1:     content_splitter.addWidget(mix_widget)
       
    1:     deck_b_widget = create_deck_section(self, 'B')
    1:     content_splitter.addWidget(deck_b_widget)
       
    1:     content_splitter.setSizes([500, 600, 500])
    1:     layout.addWidget(content_splitter)
    1:     return widget
       
       
    1: def create_deck_section(self, deck_id):
           """Create a deck section (A or B) - ENHANCED"""
    2:     deck_frame = QFrame()
    2:     deck_frame.setFrameStyle(QFrame.Shape.StyledPanel)
       
    2:     if deck_id == 'A':
    1:         border_color = "#ff4444"
    1:         deck_name = "DECK A"
           else:
    1:         border_color = "#44ff44"
    1:         deck_name = "DECK B"
       
    4:     deck_frame.setStyleSheet(f"""
               QFrame {{
                   background-color: #1a1a1a;
    2:             border: 2px solid {border_color};
                   border-radius: 8px;
                   padding: 5px;
               }}
           """)
       
    2:     deck_layout = QVBoxLayout(deck_frame)
    2:     deck_layout.setSpacing(10)
       
    2:     header_label = QLabel(f"<b>{deck_name}</b>")
    2:     header_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
    4:     header_label.setStyleSheet(
    2:         f"color: {border_color}; font-size: 16px; font-weight: bold; padding: 5px;"
           )
    2:     deck_layout.addWidget(header_label)
       
    2:     status_group = create_deck_status_section(self, deck_id)
    2:     deck_layout.addWidget(status_group)
       
    2:     activity_group = create_deck_activity_section(self, deck_id)
    2:     deck_layout.addWidget(activity_group)
       
    2:     return deck_frame
       
       
    1: def create_deck_status_section(self, deck_id):
           """Create deck status information section"""
    2:     status_group = QGroupBox("üìä Estado Actual")
    4:     status_group.setStyleSheet(
    2:         """
               QGroupBox {
                   font-weight: bold;
                   color: #ffffff;
                   border: 1px solid #666;
                   border-radius: 5px;
                   margin-top: 10px;
                   padding-top: 10px;
               }
               QGroupBox::title {
                   subcontrol-origin: margin;
                   left: 10px;
                   padding: 0 5px 0 5px;
               }
               """
           )
       
    2:     status_layout = QVBoxLayout(status_group)
       
    2:     if deck_id == 'A':
    1:         self.deck_a_preset_label = QLabel("Preset: Ninguno")
    1:         self.deck_a_activity_label = QLabel("√öltima actividad: --")
    1:         self.deck_a_controls_label = QLabel("Controles: --")
       
    1:         self.deck_a_preset_label.setStyleSheet("color: #00ff00; font-weight: bold;")
    1:         self.deck_a_activity_label.setStyleSheet("color: #888; font-size: 10px;")
    1:         self.deck_a_controls_label.setStyleSheet("color: #00aaff; font-size: 10px;")
       
    1:         status_layout.addWidget(self.deck_a_preset_label)
    1:         status_layout.addWidget(self.deck_a_activity_label)
    1:         status_layout.addWidget(self.deck_a_controls_label)
           else:
    1:         self.deck_b_preset_label = QLabel("Preset: Ninguno")
    1:         self.deck_b_activity_label = QLabel("√öltima actividad: --")
    1:         self.deck_b_controls_label = QLabel("Controles: --")
       
    1:         self.deck_b_preset_label.setStyleSheet("color: #00ff00; font-weight: bold;")
    1:         self.deck_b_activity_label.setStyleSheet("color: #888; font-size: 10px;")
    1:         self.deck_b_controls_label.setStyleSheet("color: #00aaff; font-size: 10px;")
       
    1:         status_layout.addWidget(self.deck_b_preset_label)
    1:         status_layout.addWidget(self.deck_b_activity_label)
    1:         status_layout.addWidget(self.deck_b_controls_label)
       
    2:     return status_group
       
       
    1: def create_deck_activity_section(self, deck_id):
           """Create MIDI activity section for a deck"""
    2:     activity_group = QGroupBox("üéµ Actividad MIDI")
    4:     activity_group.setStyleSheet(
    2:         """
               QGroupBox {
                   font-weight: bold;
                   color: #ffffff;
                   border: 1px solid #666;
                   border-radius: 5px;
                   margin-top: 10px;
                   padding-top: 10px;
               }
               QGroupBox::title {
                   subcontrol-origin: margin;
                   left: 10px;
                   padding: 0 5px 0 5px;
               }
               """
           )
       
    2:     layout = QVBoxLayout(activity_group)
       
    2:     table = QTableWidget()
    2:     table.setColumnCount(3)
    2:     table.setHorizontalHeaderLabels(["Tiempo", "Tipo", "Dato"])
    2:     table.setMaximumHeight(150)
       
    2:     header = table.horizontalHeader()
    2:     header.setSectionResizeMode(0, QHeaderView.ResizeMode.Fixed)
    2:     header.setSectionResizeMode(1, QHeaderView.ResizeMode.Fixed)
    2:     header.setSectionResizeMode(2, QHeaderView.ResizeMode.Stretch)
    2:     table.setColumnWidth(0, 70)
    2:     table.setColumnWidth(1, 70)
       
    2:     layout.addWidget(table)
       
    2:     if deck_id == 'A':
    1:         self.deck_a_activity_table = table
           else:
    1:         self.deck_b_activity_table = table
       
    2:     return activity_group
       
       
    1: def create_mix_section(self):
           """Create mix section"""
    1:     mix_frame = QFrame()
    1:     mix_frame.setFrameStyle(QFrame.Shape.StyledPanel)
    2:     mix_frame.setStyleSheet(
    1:         """
               QFrame {
                   background-color: #1a1a1a;
                   border: 2px solid #ffaa00;
                   border-radius: 8px;
                   padding: 5px;
               }
               """
           )
       
    1:     mix_layout = QVBoxLayout(mix_frame)
    1:     mix_layout.setSpacing(10)
       
    1:     header_label = QLabel("<b>üéöÔ∏è VISUAL MIX</b>")
    1:     header_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
    2:     header_label.setStyleSheet(
    1:         "color: #ffaa00; font-size: 16px; font-weight: bold; padding: 5px;"
           )
    1:     mix_layout.addWidget(header_label)
       
    1:     status_group = create_mix_status_section(self)
    1:     mix_layout.addWidget(status_group)
       
    1:     future_group = QGroupBox("üöÄ Pr√≥ximamente")
    2:     future_group.setStyleSheet(
    1:         """
               QGroupBox {
                   font-weight: bold;
                   color: #00aaff;
                   border: 1px solid #00aaff;
                   border-radius: 5px;
                   margin-top: 10px;
                   padding-top: 10px;
               }
               QGroupBox::title {
                   subcontrol-origin: margin;
                   left: 10px;
                   padding: 0 5px 0 5px;
               }
               """
           )
       
    1:     future_layout = QVBoxLayout(future_group)
    1:     features = [
               "‚Ä¢ Efectos visuales RT",
               "‚Ä¢ Control de colores MIDI",
               "‚Ä¢ Sync con BPM",
               "‚Ä¢ Macros visuales",
           ]
    5:     for feature in features:
    4:         label = QLabel(feature)
    4:         label.setStyleSheet("color: #00aaff; font-size: 9px; padding: 1px;")
    4:         future_layout.addWidget(label)
       
    1:     mix_layout.addWidget(future_group)
    1:     return mix_frame
       
       
    1: def create_mix_status_section(self):
           """Create mix status section"""
    1:     status_group = QGroupBox("üìä Estado del Mix")
    2:     status_group.setStyleSheet(
    1:         """
               QGroupBox {
                   font-weight: bold;
                   color: #ffffff;
                   border: 1px solid #666;
                   border-radius: 5px;
                   margin-top: 10px;
                   padding-top: 10px;
               }
               QGroupBox::title {
                   subcontrol-origin: margin;
                   left: 10px;
                   padding: 0 5px 0 5px;
               }
               """
           )
       
    1:     status_layout = QVBoxLayout(status_group)
       
    1:     self.mix_value_label = QLabel("Crossfader: 50%")
    1:     self.mix_value_label.setStyleSheet("color: #ffaa00; font-weight: bold;")
    1:     status_layout.addWidget(self.mix_value_label)
       
    1:     fader_widget = QWidget()
    1:     fader_layout = QVBoxLayout(fader_widget)
    1:     fader_layout.setContentsMargins(0, 0, 0, 0)
       
    1:     labels_layout = QHBoxLayout()
    1:     labels_layout.addWidget(QLabel("‚Üê A"))
    1:     labels_layout.addStretch()
    1:     labels_layout.addWidget(QLabel("B ‚Üí"))
    1:     fader_layout.addLayout(labels_layout)
       
    1:     self.mix_progress_bar = QProgressBar()
    1:     self.mix_progress_bar.setRange(0, 100)
    1:     self.mix_progress_bar.setValue(50)
    1:     self.mix_progress_bar.setMaximumHeight(20)
    2:     self.mix_progress_bar.setStyleSheet(
    1:         """
               QProgressBar {
                   border: 2px solid #333;
                   border-radius: 10px;
                   background-color: #1a1a1a;
                   text-align: center;
                   color: white;
                   font-weight: bold;
               }
               QProgressBar::chunk {
                   background-color: qlineargradient(x1:0, y1:0, x2:1, y2:0,
                       stop:0 #ff4444, stop:0.5 #ffaa00, stop:1 #44ff44);
                   border-radius: 8px;
               }
               """
           )
    1:     fader_layout.addWidget(self.mix_progress_bar)
    1:     status_layout.addWidget(fader_widget)
       
    1:     self.mix_activity_label = QLabel("√öltima actividad: --")
    1:     self.mix_activity_label.setStyleSheet("color: #888; font-size: 10px;")
    1:     status_layout.addWidget(self.mix_activity_label)
       
    1:     return status_group
